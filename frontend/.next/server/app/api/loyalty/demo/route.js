"use strict";(()=>{var e={};e.id=6664,e.ids=[6664],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},20279:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>y,patchFetch:()=>P,requestAsyncStorage:()=>g,routeModule:()=>d,serverHooks:()=>c,staticGenerationAsyncStorage:()=>u});var a={};r.r(a),r.d(a,{POST:()=>m});var n=r(49303),s=r(88716),o=r(60670),i=r(87070),l=r(27193);async function m(e){try{let{action:t,userStats:r,gameData:a}=await e.json();if(console.log(`🎯 Loyalty Demo: ${t}`),"calculate_tier"===t){let e=l.ZP.calculateUserTier(r),t=l.ZP.getUserFeePercentage(r),a=l.ZP.getTierInfo(e),n=l.ZP.calculateTierProgress(r);return i.NextResponse.json({userStats:r,currentTier:e,feePercentage:t,tierInfo:a,progress:n,allTiers:l.ZP.getAllTiers()})}if("simulate_game"===t){let e=l.ZP.updateUserLoyaltyStats(r,a),t=l.ZP.calculateUserTier(r),n=l.ZP.calculateUserTier(e),s=l.ZP.getTierUpgradeNotification(t,n),o=l.ZP.calculateTierProgress(e);return i.NextResponse.json({success:!0,oldStats:r,newStats:e,oldTier:t,newTier:n,tierUpgrade:s,progress:o,message:`Game completed! Stats updated: ${e.gamesPlayed} games, $${e.totalWagered.toFixed(2)} wagered`})}if("get_all_tiers"===t)return i.NextResponse.json({tiers:l.ZP.getAllTiers(),config:l.ZP.LOYALTY_CONFIG});return i.NextResponse.json({error:"Invalid action"},{status:400})}catch(e){return console.error("❌ Error in loyalty demo:",e),i.NextResponse.json({error:"Demo failed",message:e.message},{status:500})}}let d=new n.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/loyalty/demo/route",pathname:"/api/loyalty/demo",filename:"route",bundlePath:"app/api/loyalty/demo/route"},resolvedPagePath:"/app/frontend/app/api/loyalty/demo/route.js",nextConfigOutput:"standalone",userland:a}),{requestAsyncStorage:g,staticGenerationAsyncStorage:u,serverHooks:c}=d,y="/api/loyalty/demo/route";function P(){return(0,o.patchFetch)({serverHooks:c,staticGenerationAsyncStorage:u})}},27193:(e,t,r)=>{r.d(t,{ZP:()=>o});let a={tiers:{BRONZE:{name:"Bronze",feePercentage:10,minGamesPlayed:0,minTotalWagered:0,color:"#CD7F32",icon:"\uD83E\uDD49",benefits:["Standard gameplay","10% server fee"]},SILVER:{name:"Silver",feePercentage:9,minGamesPlayed:50,minTotalWagered:100,color:"#C0C0C0",icon:"\uD83E\uDD48",benefits:["Reduced fees","9% server fee","Priority matching"]},GOLD:{name:"Gold",feePercentage:8,minGamesPlayed:250,minTotalWagered:500,color:"#FFD700",icon:"\uD83E\uDD47",benefits:["Lowest fees","8% server fee","VIP support","Exclusive tournaments"]}},monthlyReset:{enabled:!0,carryoverPerks:{GOLD:"SILVER",SILVER:"BRONZE",BRONZE:"BRONZE"}}};function n(e){let{gamesPlayed:t=0,totalWagered:r=0}=e;return t>=a.tiers.GOLD.minGamesPlayed&&r>=a.tiers.GOLD.minTotalWagered?"GOLD":t>=a.tiers.SILVER.minGamesPlayed&&r>=a.tiers.SILVER.minTotalWagered?"SILVER":"BRONZE"}function s(e){return a.tiers[e]||a.tiers.BRONZE}let o={LOYALTY_CONFIG:a,calculateUserTier:n,getUserFeePercentage:function(e){let t=n(e);return a.tiers[t].feePercentage},getTierInfo:s,getAllTiers:function(){return a.tiers},calculateTierProgress:function(e){let{gamesPlayed:t=0,totalWagered:r=0}=e,s=n(e),o=null,i=null;if("BRONZE"===s){o="SILVER";let e=a.tiers.SILVER;i={gamesProgress:{current:t,required:e.minGamesPlayed,percentage:Math.min(100,t/e.minGamesPlayed*100)},wageredProgress:{current:r,required:e.minTotalWagered,percentage:Math.min(100,r/e.minTotalWagered*100)}}}else if("SILVER"===s){o="GOLD";let e=a.tiers.GOLD;i={gamesProgress:{current:t,required:e.minGamesPlayed,percentage:Math.min(100,t/e.minGamesPlayed*100)},wageredProgress:{current:r,required:e.minTotalWagered,percentage:Math.min(100,r/e.minTotalWagered*100)}}}return{currentTier:s,nextTier:o,progress:i,isMaxTier:"GOLD"===s}},updateUserLoyaltyStats:function(e,t){let{stake:r=0,gameResult:a=null}=t;return{...e,gamesPlayed:(e.gamesPlayed||0)+1,totalWagered:(e.totalWagered||0)+r,lastGameDate:new Date().toISOString(),monthlyStats:{...e.monthlyStats,gamesThisMonth:(e.monthlyStats?.gamesThisMonth||0)+1,wageredThisMonth:(e.monthlyStats?.wageredThisMonth||0)+r,month:new Date().getMonth(),year:new Date().getFullYear()}}},shouldResetMonthlyStats:function(e){let t=new Date().getMonth(),r=new Date().getFullYear();return!e.monthlyStats||e.monthlyStats.month!==t||e.monthlyStats.year!==r},performMonthlyReset:function(e){let t=n(e),r=a.monthlyReset.carryoverPerks[t],s={gamesPlayed:0,totalWagered:0};return"SILVER"===r?s={gamesPlayed:a.tiers.SILVER.minGamesPlayed,totalWagered:a.tiers.SILVER.minTotalWagered}:"GOLD"===r&&(s={gamesPlayed:a.tiers.GOLD.minGamesPlayed,totalWagered:a.tiers.GOLD.minTotalWagered}),{...e,gamesPlayed:s.gamesPlayed,totalWagered:s.totalWagered,previousTier:t,carryoverTier:r,lastReset:new Date().toISOString(),monthlyStats:{gamesThisMonth:0,wageredThisMonth:0,month:new Date().getMonth(),year:new Date().getFullYear()}}},getTierUpgradeNotification:function(e,t){let r=s(t);return{isUpgrade:t!==e,oldTier:e,newTier:t,newFeePercentage:r.feePercentage,newTierInfo:r,message:`🎉 Congratulations! You've been promoted to ${r.name} tier!`,benefits:r.benefits,feeSavings:`Server fees reduced to ${r.feePercentage}%!`}}}}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[8948,5972],()=>r(20279));module.exports=a})();